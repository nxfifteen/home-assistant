---
schedy_heating:  # This is our app instance name.
  module: hass_apps_loader
  class: SchedyApp

  actor_type: thermostat

  debug: true

  expression_environment: |
    def house_scene():
        return state("sensor.house_scene")
        
    def family_almost_home():
        return state("input_select.family_almost_home")
        
    def heating_control():
        return state("input_select.heating_control")

  watched_entities:
  - sensor.house_scene
  - input_select.family_almost_home
  - input_select.heating_control

  statistics:
    # Pick an arbitrary name for the parameter instance.
    house_temp_delta:
      # The type of parameter as found in the actor'S documentation.
      type: temp_delta
      # More parameter-specific settings:
      rooms:
        house:

  rooms:
    house:
      friendly_name: House

      actors:
        climate.hallway:
      
      rescheduling_delay: 120

      schedule:
        - v: 16
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
            - x: "Next() if family_almost_home() == 'Yes' else Break()"
            - { months: "1-2, 10-12", start: "08:00", end: "18:30" }

        - v: 18
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
            - x: "Next() if family_almost_home() == 'Yes' else Break()"
            - { months: "1-3, 10-12", start: "18:31", end: "23:59" }
                
        - v: 9
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
            - x: "Next() if house_scene() == 'Vacation' else Break()"
            - { months: "1-2, 10-12", start: "08:00", end: "20:00" }
                
        # - v: 13
        #   rules:
        #     - x: "Next() if heating_control() == 'Automatic' else Break()"
        #     - x: "Next() if house_scene() == 'Guests Are Present' else Break()"
        #     - { months: "1-2, 10-12", start: "08:00", end: "23:59" }
                
        - v: 18
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
            - x: "Next() if house_scene() == 'Occupied' else Break()"
            - { months: "1-2, 10-12", weekdays: "1-5", start: "06:00", end: "07:00" }
                
        - v: 16
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
            - x: "Next() if house_scene() == 'Occupied' else Break()"
            - { months: "1-2, 10-12", weekdays: "6-7", start: "06:00", end: "10:00" }
                
        - v: 14
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
            - x: "Next() if house_scene() == 'Occupied' else Break()"
            - { months: "1-2, 10-12", start: "10:00", end: "16:59" }

        - v: 18
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
            - x: "Next() if house_scene() == 'Occupied' else Break()"
            - { months: "1-3, 10-12", start: "17:00", end: "21:30" }

        - v: 10
          rules:
            - x: "Next() if heating_control() == 'Automatic' else Break()"
