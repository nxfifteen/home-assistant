>
  {%- set morning_hours = 9 -%}
  {%- set afternoon_hours = 12 -%}
  {%- set night_hours = 17 -%}

  {# Morning opening sentence #}
  {%- macro morning_opening_sentence() -%}
    {%- set closings = [
      "Good morning",
      "Morning",
      "Hello", 
      "Top o' the mornin’ to ya!",
      "One, two, good morning to you!",
      "Good morning, Sunshine!",
      "Wakey, wakey, eggs and bakey!",
      "Mornin', good-lookin'!"
    ] -%}
    {{closings|random}}
  {%- endmacro -%}

  {# Morning closing sentence #}
  {%- macro morning_closing_sentence() -%}
    {%- set closings = [
      "Have a great day!",
      "Enjoy your day.",
      "Have fun today!",
      "Go get 'em!"
    ] -%}
    {{closings|random}}
  {%- endmacro -%}
  
  {# Afternoon opening sentence #}
  {%- macro afternoon_opening_sentence() -%}
    {%- set closings = [
      "Good afternoon",
      "afternoon",
      "Hello", 
      "Top o' the mornin’ to ya!",
      "One, two, good afternoon to you!",
      "Good afternoon, Sunshine!",
      "Wakey, wakey, eggs and bakey!",
      "Mornin', good-lookin'!"
    ] -%}
    {{closings|random}}
  {%- endmacro -%}

  {# Afternoon closing sentence #}
  {%- macro afternoon_closing_sentence() -%}
    {%- set closings = [
      "Have a great day!",
      "Enjoy your day.",
      "Have fun today!",
      "Go get 'em!"
    ] -%}
    {{closings|random}}
  {%- endmacro -%}

  {# Evening opening sentence #}
  {%- macro evening_opening_sentence() -%}
    {%- set closings = [
      "Good evening"
    ] -%}
    {{closings|random}}
  {%- endmacro -%}

  {# Evening closing sentence #}
  {%- macro evening_closing_sentence() -%}
    {%- set closings = [
      "Have a great evening!",
      "Enjoy your night.",
      "Take it easy this evening.",
      "Have fun tonight!",
    ] -%}
    {{closings|random}}
  {%- endmacro -%}
  
  {# Slow Traffic generic sentence #}
  {% macro slow_traffic_sentence_generic() %}
    {%- set closings = [
      "The roads are pretty bad this morning, delays for both of you I'm affraid",
      "It's going to be a slow journey for both of you today",
      "Traffic is terrible this morning", 
      "You both might want to just pull a sicky as the roads are pretty bad" ,
      "It's going to be slow getting into work today"
    ] -%}
    {{closings|random}}
  {% endmacro %}
  
  {# Slow Traffic generic sentence #}
  {%- macro good_traffic_sentence_generic() -%}
    {%- set closings = [
      "Traffic is fine this morning",
      "Traffic looks good for both of you this morning",
      "Nice and easy journey today for you both", 
      "Just light traffic on the roads" ,
      "Nothing to worry about on the roads today."
    ] -%}
    {{closings|random}}
  {%- endmacro -%}
  
  {# Slow Traffic person sentence #}
  {%- macro slow_traffic_sentence_person(person) -%}
    {%- set closings = [
      "Rubbish traffic this morning for you " ~ person,
      "Looks like it's going to be slow getting in today " ~ person,
      "Traffic isn't great this morning " ~ person, 
      "looks like bad traffic this morning " ~ person,
      "Might be quicker walking I'm afraid " ~ person
    ] -%}
    {{closings|random}}
  {%- endmacro -%}
  
  {# Better Traffic person sentence #}
  {% macro better_traffic_sentence_person(person) %}
    {%- set closings = [
      "Kareen you have it a bit easier. it's going to take you",
        "Not too bad for you Kareen. It will take you",
        "A bit better for you Kareen, it's going to take you",
    ] -%}
    {{closings|random}}
  {% endmacro %}

  {%- macro time_sentence() -%}
    The current time is {{ now().strftime('%I:%M %p') }}. The temperature is {{ states.sensor.dark_sky_temperature.state }} {{ states.sensor.dark_sky_temperature.attributes.unit_of_measurement }}, the forcast is {{ states.sensor.dark_sky_summary_1d.state }}.
  {% endmacro %}

  {%- macro traffic_sentence() -%}
    {%- if now().hour< night_hours  -%}
      {%- set his_slow = states.sensor.commute_stuart_work.state -%}{%- if his_slow == 'unknown' -%}{%- set his_slow = 0 -%}{%- endif -%}
      {%- set her_slow_a = states.sensor.commute_kareen_work_a.state -%}{%- if her_slow_a == 'unknown' -%}{%- set her_slow_a = 0 -%}{%- endif -%}
      {%- set her_slow_b = states.sensor.commute_kareen_work_b.state -%}{%- if her_slow_b == 'unknown' -%}{%- set her_slow_b = 0 -%}{%- endif -%}
      {%- set his_slow = float( his_slow ) > 28 -%}
      {%- set her_slow_a = float( her_slow_a ) > 18 -%}
      {%- set her_slow_b = float( her_slow_b ) > 18 -%}
      {%- if states.binary_sensor.workday_sensor.state == 'off' -%}
        {%- if his_slow and her_slow_a and her_slow_b -%} 
          {{ slow_traffic_sentence_generic() }}. the bridge is {{ states.sensor.tay_road_bridge.state }} but it's still going to take Stuart {{ states.sensor.commute_stuart_work.state }} minutes, and it's {{states.sensor.commute_kareen_work_a.state }} minutes for Kareen if she's going to Newport or {{her_slow_b }} minutes if its Tayport.
        {%- elif his_slow  -%}
          {{ slow_traffic_sentence_person("Stuart") }} the bridge is {{ states.sensor.tay_road_bridge.state }}, but it's going to take you {{ states.sensor.commute_stuart_work.state }} minutes. {{ better_traffic_sentence_person("Kareen") }} {{states.sensor.commute_kareen_work_a.state }} minutes to get to Newport or {{ states.sensor.commute_kareen_work_b.state }} minutes to Tayport
        {%- elif her_slow_a and her_slow_b -%}
          {{ slow_traffic_sentence_person("Kareen") }} It's going to take you {{states.sensor.commute_kareen_work_a.state }} minutes to get to Newport or {{ states.sensor.commute_kareen_work_b.state }} minutes to Tayport. {{ better_traffic_sentence_person("Stuart") }} {{states.sensor.commute_stuart_work.state }} minutes since the bridge is {{ states.sensor.tay_road_bridge.state }}
        {%- elif her_slow_b -%}
          {{ slow_traffic_sentence_person("Kareen") }} It's going to take you {{ states.sensor.commute_kareen_work_a.state }} minutes to get to Newport. Tayport is a little better, it'll only take you {{ states.sensor.commute_kareen_work_b.state }} minutes. {{ better_traffic_sentence_person("Stuart") }} {{states.sensor.commute_stuart_work.state }} minutes since the bridge is {{ states.sensor.tay_road_bridge.state }}
        {%- elif her_slow_a -%}
          {{ slow_traffic_sentence_person("Kareen") }} It's going to take you {{ states.sensor.commute_kareen_work_b.state }} minutes to get to Tayport. Newport is a little better, it'll only take you {{states.sensor.commute_kareen_work_a.state }} minutes. {{ better_traffic_sentence_person("Stuart") }} {{states.sensor.commute_stuart_work.state }} minutes since the bridge is {{ states.sensor.tay_road_bridge.state }}
        {%- else -%}
          {{ good_traffic_sentence_generic() }}. Stuart the bridge is {{ states.sensor.tay_road_bridge.state }} but you are looking at {{states.sensor.commute_stuart_work.state }} minutes, and Kareen for you It's going to take {{states.sensor.commute_kareen_work_a.state }} minutes to get to Newport or {{ states.sensor.commute_kareen_work_b.state }} minutes to Tayport. 
        {% endif %}
      {%- endif -%}
    {%- endif -%}
  {% endmacro %}

  {%- macro network_sentence() -%}
    I'm protecting {{states.sensor.pi_hole_dns_unique_clients.state}} clients on the network from {{states.sensor.pi_hole_ads_blocked_today.state}} ads. That is {{states.sensor.pi_hole_ads_percentage_blocked_today.state}}% of the internet traffic.
  {% endmacro %}

  {%- macro servers_sentence() -%}
    {%- for entity_id in states.group.uptime_robot.attributes.entity_id if states(entity_id) == 'off' -%}
      {% if loop.first %}It looks like {% endif %}{% if loop.last and loop.length > 1 %} and {% elif not loop.first and loop.length > 1 %}, {% endif %}{{ state_attr(entity_id, 'friendly_name') }}{% if loop.last %} {% if loop.length == 1 %}is{% else %}are{% endif %} offline. You might want to check this out.
      {% endif %}
    {%- endfor -%}
  {% endmacro %}

  {%- macro certs_sentence() -%}
    {%- for entity_id in states.group.certs.attributes.entity_id if float(states(entity_id)) < 15 -%}
      {% if loop.first %}It would appear certificates for {% endif %}{% if loop.last and loop.length > 1 %} and {% elif not loop.first and loop.length > 1 %}, {% endif %}{{ state_attr(entity_id, 'friendly_name') }}{% if loop.last %} {% if loop.length == 1 %}is{% else %}are{% endif %} going to expire soon.
      {% endif %}
    {%- endfor -%}
  {% endmacro %}

  {% if now().hour< morning_hours  %}
    {{ morning_opening_sentence() }}
  {%- elif now().hour< afternoon_hours -%}
    {{ afternoon_opening_sentence() }}
  {%- else -%}
    {{ evening_opening_sentence() }}
  {% endif %}
  {{ time_sentence() }}
  {{ traffic_sentence() }}
  {{ network_sentence() }}
  {{ servers_sentence() }}
  {{ certs_sentence() }}
  {% if now().hour< morning_hours  -%}
    {{ morning_closing_sentence() }}
  {%- elif now().hour< afternoon_hours -%}
    {{ afternoon_closing_sentence() }}
  {%- else -%}
    {{ evening_closing_sentence() }}
  {%- endif -%}